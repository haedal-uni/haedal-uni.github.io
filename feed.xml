<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://haedal-uni.github.io//</id><title>Dal Blog</title><subtitle>프로젝트나 개인적으로 공부한 내용들을 기록하고 있습니다. </subtitle> <updated>2025-10-30T21:20:15+09:00</updated> <author> <name>haedal-uni</name> <uri>https://haedal-uni.github.io//</uri> </author><link rel="self" type="application/atom+xml" href="https://haedal-uni.github.io//feed.xml"/><link rel="alternate" type="text/html" hreflang="ko" href="https://haedal-uni.github.io//"/> <generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator> <rights> © 2025 haedal-uni </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>통합 파일 작성하기</title><link href="https://haedal-uni.github.io//posts/%ED%86%B5%ED%95%A9-%ED%8C%8C%EC%9D%BC-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0/" rel="alternate" type="text/html" title="통합 파일 작성하기" /><published>2025-10-30T00:00:00+09:00</published> <updated>2025-10-30T21:20:02+09:00</updated> <id>https://haedal-uni.github.io//posts/%ED%86%B5%ED%95%A9-%ED%8C%8C%EC%9D%BC-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0/</id> <content src="https://haedal-uni.github.io//posts/%ED%86%B5%ED%95%A9-%ED%8C%8C%EC%9D%BC-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0/" /> <author> <name>haedal-uni</name> </author> <summary> 통합 파일 작성하기 기존 형식의 엑셀 파일(results.xlsx)에 여러 개의 새로운 엑셀 데이터를 자동으로 통합하고 수식과 서식을 자동으로 정리하는 프로세스를 구축했다. 주요 단계 1. 기존 엑셀의 데이터를 삭제 (수식은 유지하기위해 첫번째 행 제거x) 2. 최신 엑셀 파일 자동 탐색 및 불러오기 3. 파일 확장자 및 시트명 처리 4. 테이블 생성 및 수식·서식 자동 적용 5. 전체 자동 실행 및 예외 처리 기본 from openpyxl import load_workbook # 엑셀 파일 열기 wb = load_workbook("test.xlsx") # data_only=True : 계산된 값(수식x) wb.sheetnames # 전체 시트 리스트 ws = wb['abc'... </summary> </entry> <entry><title>Win32com.gen_py</title><link href="https://haedal-uni.github.io//posts/win32com.gen_py/" rel="alternate" type="text/html" title="Win32com.gen_py" /><published>2025-10-14T00:00:00+09:00</published> <updated>2025-10-14T00:00:00+09:00</updated> <id>https://haedal-uni.github.io//posts/win32com.gen_py/</id> <content src="https://haedal-uni.github.io//posts/win32com.gen_py/" /> <author> <name>haedal-uni</name> </author> <category term="Analysis" /> <summary> pywin32 엑셀 파일을 열어 특정 지표를 가져오는 과정에서 module 'win32com.gen_py.00020813-0000-0000-C000-000000000046x0x1x9' has no attribute 'CLSIDToClassMap' 라는 오류가 떴다. stackoverflow 를 참고해 오류를 해결했다. python -c "import win32com; print(win32com.__gen_path__)"를 실행해 출력된 해당 위치에 오류가 나는 “00020813-0000-0000-C000-000000000046x0x1x9” 폴더를 제거한 후 실행했더니 정상적으로 동작했다. </summary> </entry> <entry><title>Excel_자동화</title><link href="https://haedal-uni.github.io//posts/Excel_%EC%9E%90%EB%8F%99%ED%99%94/" rel="alternate" type="text/html" title="Excel_자동화" /><published>2025-09-19T00:00:00+09:00</published> <updated>2025-10-14T20:01:03+09:00</updated> <id>https://haedal-uni.github.io//posts/Excel_%EC%9E%90%EB%8F%99%ED%99%94/</id> <content src="https://haedal-uni.github.io//posts/Excel_%EC%9E%90%EB%8F%99%ED%99%94/" /> <author> <name>haedal-uni</name> </author> <category term="Analysis" /> <summary> 자동화 Python 기본 문법 및 개념 파일 실행 __name__ == "__main__" 해당 파이썬 파일이 직접 실행될 때만 그 안의 코드를 실행하도록 하는 구문 다른 파일에서 import할 경우에는 실행되지 않는다. Import 다른 파일에서 실행할 때 import 구문으로 가져오기 위해 파일명을 간단하게 작성 # a.py def hello_word() : print("wow") # b.py import a x = a.hello_world() # wow 출력 in, not in x = "hello world" y = "hello world _ with python" if x in y : print("wow") # wow 문자열 포함 여부 확인... </summary> </entry> <entry><title>광고 데이터</title><link href="https://haedal-uni.github.io//posts/%EA%B4%91%EA%B3%A0-%EB%8D%B0%EC%9D%B4%ED%84%B0/" rel="alternate" type="text/html" title="광고 데이터" /><published>2025-08-31T00:00:00+09:00</published> <updated>2025-09-15T22:03:54+09:00</updated> <id>https://haedal-uni.github.io//posts/%EA%B4%91%EA%B3%A0-%EB%8D%B0%EC%9D%B4%ED%84%B0/</id> <content src="https://haedal-uni.github.io//posts/%EA%B4%91%EA%B3%A0-%EB%8D%B0%EC%9D%B4%ED%84%B0/" /> <author> <name>haedal-uni</name> </author> <category term="Analysis" /> <summary> 데이터 전처리 &amp;amp; 분석 데이터 : 2025.08.01 ~ 2025.08.29 (임의 생성 데이터) random.randint, random.choice 활용 지표 계산 : CTR, CPC, 전환율, CPA, ROAS, CPM 전처리 : INF → NaN → 0 대체, 반올림 처리, 정수형 변환 sample df.head(5) date 노출수 click 전환수 cost revenue CTR CPC 전환율 CPA ROAS CPM 202... </summary> </entry> <entry><title>Sql order 데이터 분석</title><link href="https://haedal-uni.github.io//posts/SQL-ORDER-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B6%84%EC%84%9D/" rel="alternate" type="text/html" title="Sql order 데이터 분석" /><published>2025-08-17T00:00:00+09:00</published> <updated>2025-08-17T15:46:00+09:00</updated> <id>https://haedal-uni.github.io//posts/SQL-ORDER-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B6%84%EC%84%9D/</id> <content src="https://haedal-uni.github.io//posts/SQL-ORDER-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B6%84%EC%84%9D/" /> <author> <name>haedal-uni</name> </author> <category term="Analysis" /> <summary> SQL ORDER 데이터 분석 최신 날짜 데이터 확인하기 SELECT * FROM orders ORDER BY order_date DESC LIMIT 100; 데이터가 많아 로딩하는게 시간이 많이 소요되어 limit로 제한을 두었다. 데이터는 25.06월까지 존재한다. 6 ~ 8월 데이터를 확인하기 위해 2024년의 데이터를 가지고 진행했다. 24년 06~08월 월별 구매 건수 DATE_FORMAT(날짜 , 형식) : 날짜를 지정한 형식으로 출력 SELECT DATE_FORMAT(order_date, '%Y-%m') date, COUNT(order_id) count FROM orders WHERE order_date BETWEEN '2024-06-01' AND '2024-08-31'... </summary> </entry> </feed>
